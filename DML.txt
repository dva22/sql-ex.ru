Задание: 22 (Serge I: 2004-09-09)
Для каждого корабля с неизвестным годом спуска на воду записать в поле launched округленный до целого числа средний год спуска на воду кораблей этого класса. Если этот средний по классу год неизвестен, записать округленный до целого числа средний год спуска на воду кораблей страны данного корабля.
WITH
LaunchedShip AS
(
   SELECT
     s.name,
     s.launched,
     (SELECT ROUND(AVG(sIN.launched * 1.0), 0)
      FROM 
        Ships sIN
      WHERE 
        sIN.class = s.class
      ) launchedClass,
     (SELECT ROUND(AVG(sIN.launched * 1.0), 0)
      FROM 
        Classes cIN
        INNER JOIN Ships sIN ON sIN.class = cIN.class
      WHERE 
        cIN.country = (SELECT 
                         max(cIN1.country) 
                       FROM 
                         Classes cIN1
                       JOIN Ships sIN1 
                       ON sIN1.class = cIN1.class
                       WHERE sIN1.name = s.name
                       ) 
      ) launchedCountry
   FROM
     Ships s
)
UPDATE LaunchedShip
SET 
  launched = COALESCE(launchedClass, launchedCountry)
WHERE
  launched is null

Задание: 23 (anddros: 2010-09-24)
Британские ученые вывели формулу оптимального соотношения огневой мощи корабля и его водоизмещения. Она такова: (Водоизмещение) = (Число орудий) * ((Калибр) в кубе).
Для каждого класса измените число орудий и/или калибр таким образом, чтобы абсолютное значение разницы между текущим водоизмещением и "оптимальным" было минимальным. 
Менять можно только на 1 или 2 целых единицы каждый из показателей в любую сторону или не менять вовсе.
В случае нескольких равноценных вариантов изменения, для выбора лучшего руководствоваться последовательно критериями:
- минимальное изменение калибра
- минимальное изменение числа орудий
- максимальное число орудий
WITH
Rows AS
(SELECT
   i
 FROM
   (VALUES (-2),(-1),(0),(1),(2)) Tmp(i)
),
Val AS
(
SELECT
  c.class classIn,
  ABS(c.displacement -
      (c.numGuns + rNum.i) * POWER(c.bore + rBore.i, 3)
     ) diff,
  rNum.i num,
  rBore.i bore
FROM
  Classes c, 
  Rows rNum,
  Rows rBore
)
UPDATE 
  Classes 
SET
  bore =  bore +
  (SELECT TOP 1
     bore
   FROM
     Val
   WHERE
     class = classIn 
   ORDER BY
     diff, ABS(bore), ABS(num), num DESC
  ),
  numGuns =  numGuns +
  (SELECT TOP 1
     num
   FROM
     Val
   WHERE
     class = classIn 
   ORDER BY
     diff, ABS(bore), ABS(num), num DESC
  )
WHERE
  bore IS NOT NULL AND
  numGuns IS NOT NULL