/***
Схема базы данных состоит из трех отношений:
utQ (Q_ID int, Q_NAME varchar(35)); utV (V_ID int, V_NAME varchar(35), V_COLOR char(1)); utB (B_Q_ID int, B_V_ID int, B_VOL tinyint, B_DATETIME datetime).
Таблица utQ содержит идентификатор и название квадрата, цвет которого первоначально черный.
Таблица utV содержит идентификатор, название и цвет баллончика с краской.
Таблица utB содержит информацию об окраске квадрата баллончиком: идентификатор квадрата, идентификатор баллончика, количество краски и время окраски.
При этом следует иметь в виду, что:
- баллончики с краской могут быть трех цветов - красный V_COLOR='R', зеленый V_COLOR='G', голубой V_COLOR='B' (латинские буквы).
- объем баллончика равен 255 и первоначально он полный;
- цвет квадрата определяется по правилу RGB, т.е. R=0,G=0,B=0 - черный, R=255, G=255, B=255 - белый;
- запись в таблице закрасок utB уменьшает количество краски в баллончике на величину B_VOL и соответственно увеличивает количество краски в квадрате на эту же величину;
- значение 0 < B_VOL <= 255;
- количество краски одного цвета в квадрате не превышает 255, а количество краски в баллончике не может быть меньше нуля;
- время окраски B_DATETIME дано с точностью до секунды, т.е. не содержит миллисекунд.***/

/***
Задание: 92 (ZrenBy: 2003-09-01)
Выбрать все белые квадраты, которые окрашивались только из баллончиков, 
пустых к настоящему времени. Вывести имя квадрата
SELECT DISTINCT q.Q_NAME
FROM utB b, utQ q
WHERE b.B_Q_ID = q.Q_ID and
      b.B_Q_ID in (SELECT B1.B_Q_ID
                   FROM utB b1, utV v1
                   WHERE b1.B_V_ID = v1.V_ID
                   GROUP BY B1.B_Q_ID
                   HAVING sum(iif(v1.V_COLOR = 'R', b1.B_VOL, 0))>=255 and
                          sum(iif(v1.V_COLOR = 'G', b1.B_VOL, 0))>=255 and
                          sum(iif(v1.V_COLOR = 'B', b1.B_VOL, 0))>=255
                  ) and
 b.B_Q_ID not in (SELECT B1.B_Q_ID
                   FROM utB b1, utV v1
                   WHERE b1.B_V_ID = v1.V_ID and
                   v1.V_ID not in (SELECT B2.B_V_ID
                                   FROM utB b2
                                   GROUP BY B2.B_V_ID
                                   HAVING SUM(B2.B_VOL) >= 255
                                  )
                  )

Задание: 106 (Baser: 2013-09-06)
Пусть v1, v2, v3, v4, ... представляет последовательность вещественных чисел - объемов окрасок b_vol, упорядоченных по возрастанию b_datetime, b_q_id, b_v_id. 
Найти преобразованную последовательность P1=v1, P2=v1/v2, P3=v1/v2*v3, P4=v1/v2*v3/v4, ..., где каждый следующий член получается из предыдущего умножением на vi (при нечетных i) или делением на vi (при четных i). 
Результаты представить в виде b_datetime, b_q_id, b_v_id, b_vol, Pi, где Pi - член последовательности, соответствующий номеру записи i. Вывести Pi с 8-ю знаками после запятой.
WITH dsP AS
(SELECT b_datetime, 
        b_q_id, 
        b_v_id, 
        B_VOL,
        ROW_NUMBER() OVER (ORDER BY b_datetime, b_q_id, b_v_id) pow
 FROM utB
)
SELECT b_datetime, 
       b_q_id, 
       b_v_id, 
       B_VOL,
       cast(exp(sum(log(iif(pow % 2 = 0,1.0/cast(B_VOL as decimal(18,8)  ),B_VOL))) OVER (ORDER BY b_datetime, b_q_id, b_v_id)) as decimal(18,8))
FROM dsP
Задание: 116 (Velmont: 2013-11-19)
Считая, что каждая окраска длится ровно секунду, определить непрерывные интервалы времени с длительностью более 1 секунды из таблицы utB.
Вывод: дата первой окраски в интервале, дата последней окраски в интервале.
WITH cte AS (SELECT B_DATETIME, 
	DATEADD(ss, -1 * DENSE_RANK() OVER(ORDER BY B_DATETIME), B_DATETIME) AS grp
	FROM utB
)

SELECT MIN(B_DATETIME), MAX(B_DATETIME)
FROM cte
GROUP BY grp
HAVING COUNT(DISTINCT B_DATETIME) >  1

Задание: 119 ($erges: 2008-04-25)
Сгруппировать все окраски по дням, месяцам и годам. Идентификатор каждой группы должен иметь вид "yyyy" для года, "yyyy-mm" для месяца и "yyyy-mm-dd" для дня.
Вывести только те группы, в которых количество различных моментов времени (b_datetime), когда выполнялась окраска, более 10.
Вывод: идентификатор группы, суммарное количество потраченной краски.
SELECT FORMAT(B_DATETIME, 'yyyy'),
       SUM(B_VOL)
  FROM utB
 GROUP BY FORMAT(B_DATETIME, 'yyyy')
HAVING COUNT(DISTINCT B_DATETIME) > 10
 UNION all
SELECT FORMAT(B_DATETIME, 'yyyy-MM'),
       SUM(B_VOL)      
FROM utB
GROUP BY FORMAT(B_DATETIME, 'yyyy-MM')
HAVING COUNT(DISTINCT B_DATETIME) > 10
     UNION all
SELECT FORMAT(B_DATETIME, 'yyyy-MM-dd'),
       SUM(B_VOL)      
FROM utB
GROUP BY FORMAT(B_DATETIME, 'yyyy-MM-dd')
HAVING COUNT(DISTINCT B_DATETIME) > 10

Задание: 112 (Serge I: 2003-12-24)
Какое максимальное количество черных квадратов можно было бы окрасить в белый цвет
оставшейся краской

with cte as (
select ((count(distinct [V_ID]) * 255 - sum([B_VOL]))/ 255) as fv
from utv left join [dbo].[utB] on [utB].[B_V_ID] = [utV].[V_ID]
group by [V_COLOR])
select iif(count(*)=3,min(fv),0) as qty from cte

Задание: 113 (Serge I: 2003-12-24)
Сколько каждой краски понадобится, чтобы докрасить все Не белые квадраты до белого цвета.
Вывод: количество каждой краски в порядке (R,G,B)
with cte1 as (
select 
     iif(v_color = 'R',
           (select count (*) from utQ) * 255- sum(coalesce([B_VOL],0)),
           0) as r,
     iif(v_color = 'G',
           (select count (*) from utQ) * 255- sum(coalesce([B_VOL],0)),
           0) as g,
     iif(v_color = 'B',
           (select count (*) from utQ) * 255- sum(coalesce([B_VOL],0)),
           0) as b
from utv, utB
where  utb.b_v_ID = utv.v_ID
group by v_color
)
select sum(r), sum(g), sum(b) from cte1

Задание: 115 (Baser: 2013-11-01)
Рассмотрим равнобочные трапеции, в каждую из которых можно вписать касающуюся всех сторон окружность. Кроме того, каждая сторона имеет целочисленную длину из множества значений b_vol. 
Вывести результат в 4 колонки: Up, Down, Side, Rad. Здесь Up - меньшее основание, Down - большее основание, Side - длины боковых сторон, Rad – радиус вписанной окружности (с 2-мя знаками после запятой).
SELECT
    DISTINCT
    b1.b_vol,
    b2.b_vol,
    b3.b_vol,
    CAST(SQRT(1.0 * b1.b_vol * b2.b_vol) / 2 AS NUMERIC(8, 2))
FROM 
    utB b1,
    utB b2,
    utB b3
WHERE 
    b1.b_vol < b2.b_vol and
    b3.b_vol = (1.0 * b1.b_vol + 1.0 * b2.b_vol) / 2
Задание: 134 (Serge I: 2003-12-26)
Выполняется докраска квадратов до белого цвета каждым цветом по следующей схеме:
- сначала закрашиваются квадраты, для которых требуется меньше краски соответствующего цвета;
- при одинаковом необходимом количестве краски сначала закрашиваются квадраты с меньшим q_id.
Найти идентификаторы НЕ белых квадратов, оставшихся после израсходования всей краски.
--неоходимо красох по цветам
WITH
dsNeed AS
    (SELECT
         q.Q_ID,
         q.col color,
         255-SUM(COALESCE(b.B_VOL,0)) need,
         SUM(255-SUM(COALESCE(b.B_VOL,0))) 
               OVER (PARTITION BY q.col ORDER BY 
                         255-SUM(COALESCE(b.B_VOL,0)), q.Q_ID
                    ) sum
     FROM
         (SELECT Q_ID, Col 
          FROM (SELECT
                    Q_ID
                FROM 
                    utQ
                ) t1
                CROSS JOIN 
               (SELECT 'R' Col
                UNION ALL 
                SELECT 'G' UNION ALL
                SELECT 'B'
               ) t2
          )  q
         LEFT JOIN 
          (SELECT
               v.V_COLOR,
               b.B_Q_ID,
               SUM(b.B_VOL) B_VOL
           FROM
              utB b,utV v
              WHERE v.V_ID = b.B_V_ID  
            GROUP BY 
              v.V_COLOR,
              b.B_Q_ID 
           ) b
         ON q.Q_ID = b.B_Q_ID AND b.V_COLOR = q.Col
     GROUP BY
         q.Q_ID,
         q.col
    ),
--остатки краски по цветам
dsHas AS
    (SELECT
         v.V_COLOR color,
         COUNT(DISTINCT v.V_ID)*255 - SUM(COALESCE(b.B_VOL,0)) has
     FROM
         utV v
         LEFT JOIN utB b
         ON v.V_ID = b.B_V_ID         
     GROUP BY
         v.V_COLOR
     )
SELECT
    DISTINCT dsNeed.Q_ID
FROM 
    dsNeed,
    dsHas
WHERE
    dsNeed.color = dsHas.color and
    dsNeed.sum > dsHas.has

Задание: -1 (Serge I: 2004-06-22) 
Методом наименьших квадратов найти линейную зависимость мгновенного расхода краски от времени: 
V = at + b, 
где V - расход краски; t - время в секундах, отсчитываемое от первой окраски (t = 0). 
Вывод: a с 8-ю знаками после десятичной точки; b - с 2-мя знаками после десятичной точки. 
WITH
dsD AS
(SELECT B_DATETIME,
    iif(DATEDIFF(second,(select min(B_DATETIME) from utB),B_DATETIME)>0,cast(DATEDIFF(second,(select min(B_DATETIME) from utB),B_DATETIME) as decimal(10,0))-81600,0) sec,
    B_VOL vol
 FROM
    utB
),
dsP AS
(SELECT
   SUM(sec * sec) stt,
   SUM(vol * sec)  syt,
   SUM(sec) st,
   SUM(vol)  sy,
   COUNT(*)  N
 FROM
    dsD 
),
d as
(
SELECT (syt * N -sy*st) a ,(N*stt -st*st) b,
 (stt*sy -syt*st) c,(N*stt -st*st) d
FROM
    dsP
)
/*SELECT
   cast(B_DATETIME as int)
 FROM
    dsD*/


select
cast(cast(CONVERT(decimal(30,0), a)  /CONVERT(decimal(30,0),b) as decimal(26,8))as decimal(26,8)) ,
cast(cast(CONVERT(decimal(25,0), c)  /CONVERT(decimal(19,0),b) as decimal(26,1))as decimal(26,2))  from d


***/

Задание: 10 (Serge I: 2017-01-20) 
В таблице utB, отсортированной по b_q_id, b_v_id, b_datetime, определить количество (N) подряд идущих одинаковых значений b_vol от 
конца списка. Вывести N, b_vol.
WITH
   dsV AS
   (SELECT 
        row_number() over ( order by b_q_id, b_v_id, b_datetime) n,
        coalesce(LAG(b_vol) OVER(order by b_q_id, b_v_id, b_datetime),-1) lag,
        b_vol vol    
    FROM 
        utB
   )
SELECT 
   count(*),
   max(vol)
FROM
   dsV v
WHERE 
   n >= (SELECT max(n) FROM dsV where vol <> lag)

Задание: 11 (ZrenBy: 2003-09-01) 
Выбрать все белые квадраты, каждый из которых окрашивался только баллончиками, использовавшимися для этого (одного) квадрата. Вывести имя квадрата
WITH
dsV AS
(
SELECT
    b.B_V_ID id
FROM
    utB b
GROUP BY 
    b.B_V_ID
HAVING (COUNT(DISTINCT b.B_Q_ID)) = 1
)
SELECT
    max(q.q_name)
FROM
    utQ q,
    utB b
WHERE
    q.q_id = b.B_Q_ID AND
    b.B_V_ID in (SELECT id FROM dsV)
GROUP BY 
    q.q_id
HAVING (SUM(b.B_VOL)) = 765

Задание: 12 (Serge I: 2006-11-17) 
Распределить по трем столбцам (построчно) квадраты из таблицы utq в порядке возрастания их идентификаторов.
Если последняя строка окажется незаполненной, использовать NULL для отсутствующих значений.
Например, для последовательности идентификаторов {1,2,3,4,5,6,7,8} результат должен выглядеть так:

1   2   3

4   5   6

7   8   NULL
WITH 
dsQ AS
(
SELECT
   ROW_NUMBER() OVER(ORDER BY q_id) - (ROW_NUMBER() OVER(ORDER BY q_id) + 2) % 3 id, 
   IIF((ROW_NUMBER() OVER(ORDER BY q_id) + 2) % 3 = 0,q_id,0) id1,
   IIF((ROW_NUMBER() OVER(ORDER BY q_id) + 1) % 3 = 0,q_id,0) id2,
   IIF((ROW_NUMBER() OVER(ORDER BY q_id) + 0) % 3 = 0,q_id,0) id3
FROM
   utQ
)
SELECT 
   IIF(SUM(id1) = 0,NULL,SUM(id1)), 
   IIF(SUM(id2) = 0,NULL,SUM(id2)), 
   IIF(SUM(id3) = 0,NULL,SUM(id3))
FROM 
   dsQ
GROUP BY 
   id

Задание: 13 (ZrenBy: 2003-09-01) 
Найти баллончик, который при окраске одного квадрата использовался первым по времени, а для другого - последним.
Вывести имена баллончика, квадрата, для которого этот баллончик был первым, и квадрата, для которого этот баллончик был последним.
WITH
dsBmin AS
(
SELECT
   b_q_id,
   b_v_id
FROM
   utB bOut
WHERE not exists(select * from utB B0 where B0.B_Q_ID=bOut.B_Q_ID and B0.B_DATETIME < bOut.B_DATETIME )  

),
dsBmax AS
(
SELECT
   b_q_id,
   b_v_id
FROM
   utB bOut
WHERE  not exists(select * from utB B0 where B0.B_Q_ID=bOut.B_Q_ID and B0.B_DATETIME > bOut.B_DATETIME )

)
SELECT 
   utv.v_name,
   utQ.q_name,
   utQ1.q_name
FROM
   dsBmin b1,
   dsBmax b2,
   utQ,
   utV,
   utQ utQ1 
WHERE
   b1.b_v_id = b2.b_v_id and 
  b1.b_q_id <> b2.b_q_id and b1.b_q_id=utQ.Q_ID and b1.b_v_id = utV.v_ID
and b2.b_q_id=utQ1.Q_ID

Задание: 18 (ZrenBy: 2003-09-01) 
Выбрать все белые квадраты, которые окрашивались только из баллончиков, пустых к настоящему времени. Причем эти баллончики были использованы только для белых квадратов. 
Вывести имя квадрата
WITH
dsV AS
(
SELECT
    b.b_v_id id
FROM
    utB b
WHERE
    b.b_q_id in (SELECT
    b.b_q_id 
FROM
    utB b
GROUP BY 
    b.b_q_id
HAVING 
    (SUM(b.B_VOL)) = 765)
GROUP BY 
    b.b_v_id
HAVING 
    (SUM(b.B_VOL)) = 255
)
SELECT
    (SELECT q_name FROM utQ where b.B_Q_ID = Q_ID)
FROM
    utB b
WHERE
    b.B_V_ID in (SELECT id FROM dsV)
GROUP BY 
    b.B_Q_ID
HAVING (SUM(b.B_VOL)) = 765

Задание: 21 (pаparome: 2006-03-14) 
Имеются следующие группы окраски квадратов:
- Группа 1: суммарное количество краски одного цвета лежит в диапазоне от 0 до 63 включительно.
- Группа 2: суммарное количество краски одного цвета лежит в диапазоне от 64 до 127 включительно.
- Группа 3: суммарное количество краски одного цвета лежит в диапазоне от 128 до 191 включительно.
- Группа 4: суммарное количество краски одного цвета лежит в диапазоне от 192 до 255 включительно.
Определить принадлежность каждого квадрата всем возможным группам.
Вывести: наименование квадрата; перечисление по возрастанию через запятую и пробел номеров групп, которым принадлежит квадрат
(например, если квадрат принадлежит группам 1 и 3, то требуется вывести '1, 3')WITH 
dsQ AS
(SELECT 
   MAX(q.Q_NAME) name,
   CASE
      WHEN SUM(b_vol) <= 63 THEN 1
      WHEN SUM(b_vol) <= 127 THEN 2
      WHEN SUM(b_vol) <= 191 THEN 3
      WHEN SUM(b_vol) <= 255 THEN 4
      ELSE 1
   END as g
FROM
   utQ q
   LEFT JOIN utB b ON q.Q_ID = b.b_Q_ID
   LEFT JOIN utV v ON b.B_V_ID = v.V_ID
GROUP BY 
   q.Q_ID,
   v.v_color
),
dsQ1 as
(SELECT
   name,
   g,
   count(*) c,
   iif(g=1,1,0) g1
FROM 
   dsQ
GROUP BY 
   name , g
)

SELECT
   name,
   CASE
   WHEN SUM(c) < 3 AND SUM(g1) = 0 THEN '1, '+STRING_AGG(g, ', ')
   ELSE STRING_AGG(g, ',')
   END AS H
FROM
   dsQ1
GROUP BY
   name

Задание: 22 (ZrenBy: 2003-09-01) 
Для всех квадратов, последняя окраска которых была в июне любого года, найти окрашивающие их баллончики при условии, что эти баллончики использовались еще и для квадратов, окраска которых началась в феврале следующего года. Вывести имена "июньского" квадрата, баллончика и "февральского" квадрата.

WITH 
dsQ AS
(
SELECT
   b_q_id id,
   MAX(B_DATETIME) max,
   MIN(B_DATETIME) min   
FROM
   utB
GROUP BY 
   b_q_id
)
SELECT DISTINCT 
   (SELECT q_name FROM utQ WHERE q_id = q.id),
   (SELECT v_name FROM utV WHERE v_id = b.b_v_id),
   (SELECT q_name FROM utQ WHERE q_id = q1.id)     
FROM
   utB b,
   utB b1,
   dsQ q1,
   dsQ q 
WHERE
   q.id = b.b_q_id AND
   DATEPART(month, q1.min) = 2 AND
   DATEPART(YEAR, q1.min) - 1 = DATEPART(YEAR, q.max) AND
   q1.id = b1.b_q_id AND
   b1.b_v_id = b.b_v_id AND
   DATEPART(month, q.max) = 6

Задание: 26 (VIG: 2003-12-22) 
С момента, когда был израсходован полностью первый по времени баллончик,
посчитать количество заполненных от 1/3 до 2/3 включительно баллончиков за каждую секунду времени в течение 30 секунд (30 показателей).
Вывод: дата-время, количество баллончиков
SELECT
   DATEADD(SECOND, ints.i, times.max),

(SELECT COUNT(*) FROM (SELECT 
   b.b_v_id
FROM
   utB b
WHERE 
   b.b_datetime <= DATEADD(SECOND, ints.i, times.max) 
GROUP BY
   b.b_v_id
HAVING
   SUM(b_vol) <= 170  AND SUM(b_vol) >= 85
) TMP)
FROM
(VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9),
        (10),(11),(12),(13),(14),(15),(16),(17),(18),(19),
        (20),(21),(22),(23),(24),(25),(26),(27),(28),(29)
) ints(i),
(SELECT TOP 1
   MAX(b.b_datetime) max
FROM
   utB b
GROUP BY
   b.b_v_id
ORDER BY 
   SUM(b_vol) DESC, MAX(b.b_datetime)
) times

Задание: 27 (Fiolent: 2004-02-26) 
Среди интервалов длительностью не более 4 секунд (включая границы), в начальной и конечной точке которых производилась окраска, определить те, в течение которых расход краски максимален. 
Считать, что окраска происходит мгновенно в момент времени, заданный в поле b_datetime.
Вывести начало интервала, конец интервала, расход краски. 
SELECT  TOP 1 WITH TIES
   min(b1.b_datetime),
   Max(b1.b_datetime),
   SUM(b1.b_vol)
FROM 
   utB b1 
   INNER JOIN (SELECT distinct b_datetime FROM utB) b 
   ON b1.b_datetime >= b.b_datetime AND
      b1.b_datetime <= DATEADD(second, 3, b.b_datetime)
GROUP BY
   b.b_datetime
ORDER BY 
   SUM(b1.b_vol) DESC
Задание: 28 (ZrenBy: 2003-09-01) 
Выбрать все белые квадраты, которые окрашивались только баллончиками, израсходованными к настоящему времени. При этом среди баллончиков должен быть хотя бы один, которым окрашивалось более двух любых квадратов. Вывести имя квадрата, имя этого баллончика(ов), и количество квадратов, окрашенных этим баллончиком
WITH
dsAll as
(
SELECT 
   B_Q_ID,
   B_V_ID,
   (select  SUM(b_vol) from utB where b_q_id=b.b_q_id) s1,
   (select  SUM(b_vol) from utB where b_v_id=b.b_v_id) s2,
   (select  count(distinct b_q_id) from utB where b_v_id=b.b_v_id) c
FROM
   utB b
)
SELECT 
   (SELECT q_name FROM utQ where B_Q_ID = Q_ID),
   (SELECT v_name FROM utV where B_V_ID = V_ID),
   max(c)
FROM 
   dsAll a
where
    s1 = 765 and 
    s2 = 255 and 
    c>2 and
    B_Q_ID not in (select B_Q_ID from dsAll where s2<255)
GROUP BY
    B_Q_ID, B_V_ID

Задание: 31 (Fiolent: 2004-06-22) 

Определить все серии окрасок, в которых один квадрат окрашивался
последовательно красным, зеленым и голубым баллончиками.
При одновременной окраске несколькими баллончиками 
считать, что баллончик с меньшим номером окрашивает раньше. 
Вывести имя квадрата, имя красного баллончика, имя зеленого баллончика, имя голубого баллончика.
WITH 
dsV AS
(SELECT
    b_q_id,
    b_v_id v1,
    LEAD(b_v_id,1,-1) OVER(PARTITION BY b_q_id ORDER BY b_datetime, b_v_id) v2,
    LEAD(b_v_id,2,-1) OVER(PARTITION BY b_q_id ORDER BY b_datetime, b_v_id) v3
 FROM
    utB
)
SELECT
    (SELECT q_name FROM utQ where q_id = v.b_q_id) q,
    v1.v_name,
    v2.v_name,
    v3.v_name
FROM
    dsV v
    INNER JOIN utV v1 ON v1.v_id = v.v1
    INNER JOIN utV v2 ON v2.v_id = v.v2
    INNER JOIN utV v3 ON v3.v_id = v.v3
WHERE
    v1 <> v2 AND
    v2 <> v3 AND
    v1 <> v3 AND
    v1.v_color = 'R' AND
    v2.v_color = 'G' AND
    v3.v_color = 'B'

Задание: 32 (Roman Golubin: 2005-12-13) 
Для каждого окрашенного квадрата вывести номера баллончиков, которыми он окрашивался, одной строкой, с запятой в качестве разделителя, без пробелов. Баллончики в списке должны быть расположены в том порядке (слева направо), в котором они окрашивали этот квадрат. При одновременной окраске квадрата двумя (или более) баллончиками выводить эти баллончики в порядке возрастания их номеров. 
Вывод: номер квадрата, разделенная запятыми последовательность баллончиков, использованных для окраски этого квадрата (при большом числе окрасок квадрата ограничиться первыми 80-ю окрасками).
SELECT
  q.b_q_id,
  STUFF(
       (SELECT top 80
               concat(',',b_v_id)
        FROM
           utB
        WHERE 
            b_q_id = q.b_q_id
        ORDER BY 
            b_datetime, 
            b_v_id FOR XML PATH('')
       ),1,1,'')
FROM
  utB q
group by 
  b_q_id

Задание: 33 (DimaN: 2004-03-01) 
Найти все квадраты, при окраске каждого из которых было использовано следующее количество каждой краски: красной от 0 до 50 включительно; зеленой – 50–100; синей - 100-150. 
При этом любая пара баллончиков, использованная для окраски квадрата, удовлетворяющего условию по количеству краски, не должна встречаться еще на каком-либо квадрате, удовлетворяющему этому же условию. 
Вывести id квадрата.
WITH
dsAll AS
(
SELECT
   b1.b_q_id,
   b1.b_v_id,
   SUM(IIF(v.v_color = 'R', b1.b_vol, 0)) OVER(PARTITION BY b1.b_q_id) R,
   SUM(IIF(v.v_color = 'G', b1.b_vol, 0)) OVER(PARTITION BY b1.b_q_id) G,
   SUM(IIF(v.v_color = 'B', b1.b_vol, 0)) OVER(PARTITION BY b1.b_q_id) B
FROM 
   utB b1,
   utV v
WHERE 
   b1.b_v_id = v.v_id
),
dsDAll as
(
SELECT
   a1.b_q_id,
   a1.b_v_id v1, 
   a2.b_v_id v2
FROM 
   dsAll a1
   INNER JOIN dsAll a2 ON a1.b_q_id = a2.b_q_id and a1.b_v_id < a2.b_v_id
WHERE
   a1.R BETWEEN 0 AND 50 AND
   a1.G BETWEEN 50 AND 100 AND
   a1.B BETWEEN 100 AND 150 

)
SELECT DISTINCT
   a3.b_q_id
FROM 
   dsDAll a3
WHERE
   a3.b_q_id NOT IN
(SELECT 
   a1.b_q_id
FROM 
   dsDAll a1
WHERE
   a1.b_q_id IN (SELECT a1.b_q_id FROM dsDAll a2 
                        WHERE
                           a2.b_q_id <> a1.b_q_id AND
                           a2.v1 = a1.v1 AND
                           a2.v2 = a1.v2 
                       )
)
Задание: 35 (Baser: 2015-09-18) 
Эратосфен сделал нумерацию всех тюбиков с краской (баллончиков) по УБЫВАНИЮ номеров V_ID. 
В первый день он проверил, что колпачки всех тюбиков хорошо закручены. На второй день он открутил колпачки у каждого второго тюбика, т.е. у 2-го, 4-го, 6-го,… На третий день он поменял положение колпачков каждого третьего тюбика (3,6,9,…) – закрытые он открутил, а открытые закрутил. 
Подобным образом он действовал ежедневно (на N-тый день он поменял положение колпачков у тюбиков с номерами N, 2N, 3N,…). Когда он обнаружил, что крутить больше нечего, то открытые тюбики отбросил. 
Вывести в одну колонку имена (V_NAME) оставшихся тюбиков с краской.
WITH
dsD AS
(SELECT *
 FROM (VALUES (1,1),(2,2),(3,2),(4,3),(5,2),(6,4),(7,2),(8,4),(9,3),(10,4),(11,2),(12,6),(13,2),(14,4),(15,4),(16,5),(17,2),(18,6),(19,2),(20,6),(21,4),(22,4),(23,2),(24,8),(25,3),(26,4),(27,4),(28,6),(29,2),(30,8),(31,2),(32,6),(33,4),(34,4),(35,4),(36,9),(37,2),(38,4),(39,4),(40,8),(41,2),(42,8),(43,2),(44,6),(45,6),(46,4),(47,2),(48,10),(49,3),(50,6),(51,4),(52,6),(53,2),(54,8),(55,4),(56,8),(57,4),(58,4),(59,2),(60,12),(61,2),(62,4),(63,6),(64,7),(65,4),(66,8),(67,2),(68,6),(69,4),(70,8),(71,2),(72,12),(73,2),(74,4),(75,6),(76,6),(77,4),(78,8),(79,2),(80,10),(81,5),(82,4),(83,2),(84,12),(85,4),(86,4),(87,4),(88,8),(89,2),(90,12),(91,4),(92,6),(93,4),(94,4),(95,4),(96,12),(97,2),(98,6),(99,6),(100,9),(101,2),(102,8),(103,2),(104,8),(105,8),(106,4),(107,2),(108,12),(109,2),(110,8),(111,4),(112,10),(113,2),(114,8),(115,4),(116,6),(117,6),(118,4),(119,4),(120,16),(121,3),(122,4),(123,4),(124,6),(125,4),(126,12),(127,2),(128,8),(129,4),(130,8),(131,2),(132,12),(133,4),(134,4),(135,8),(136,8),(137,2),(138,8),(139,2),(140,12),(141,4),(142,4),(143,4),(144,15),(145,4),(146,4),(147,6),(148,6),(149,2),(150,12),(151,2),(152,8),(153,6),(154,8),(155,4),(156,12),(157,2),(158,4),(159,4),(160,12),(161,4),(162,10),(163,2),(164,6),(165,8),(166,4),(167,2),(168,16),(169,3),(170,8),(171,6),(172,6),(173,2),(174,8),(175,6),(176,10),(177,4),(178,4),(179,2),(180,18),(181,2),(182,8),(183,4),(184,8),(185,4),(186,8),(187,4),(188,6),(189,8),(190,8),(191,2),(192,14),(193,2),(194,4),(195,8),(196,9),(197,2),(198,12),(199,2),(200,12)
) d(i,d)
),
dsI AS
(SELECT
   v_name,
   ROW_NUMBER() OVER (ORDER BY v_id desc) num
FROM 
   utV
)
SELECT
   dsI.v_name--,
 --  dsD.d
FROM
   dsI
   INNER JOIN dsD ON dsD.i = dsI.num
WHERE 
   dsD.d % 2 <> 0

Задание: 36 (risp: 2011-05-06) 
Баллончики упорядочиваются по времени первого использования. Если время первого использования одинаково, первым берется баллончик с большим ID. Полные баллончики добавляются последними. 
Последовательность баллончиков разбивается на группы по четыре. Набор 4-х значений количества оставшейся краски в баллончиках в каждой группе представляется как IP-адрес, если последняя группа неполная - она дополняется нулями. 
Для каждой пары соседних IP-адресов найти количество адресов между ними, включая имеющиеся. Для последнего адреса второй парный адрес - первый. 
Вывести: первый IP-адрес пары, второй IP-адрес пары, количество адресов
WITH 
dsV AS
(SELECT
   MIN(B_DATETIME) min,
   b_v_id id,
   255 - SUM(b_vol) sum  
FROM
   utB
GROUP BY 
   b_v_id
UNION ALL
SELECT
   '2050-01-01 00:00:00',
   v_id,
   255
FROM
   utV
WHERE 
   v_id NOT IN (SELECT b_v_id FROM utB)
),
dsG AS
(SELECT
   min,
   id, 
   sum,
   (ROW_NUMBER() OVER(ORDER BY min, id DESC)-1)/4+1 G,
   ROW_NUMBER() OVER(ORDER BY min, id DESC)-
   FLOOR((ROW_NUMBER() OVER(ORDER BY min, id DESC)-1)/4)*4 G1
FROM
   dsV
),
dsG1 AS
(
SELECT 
   STRING_AGG(sum, '.') ip,
      sum(iif(g1=1,sum*cast(256 as bigint) *256*256,0)+
       iif(g1=2,sum*256*256,0)+
       iif(g1=3,sum*256,0)+
       iif(g1=4,sum,0)
      ) + 1 sum,
   ROW_NUMBER() OVER (ORDER BY G) num,
   COUNT(G1) C
FROM
   dsG
GROUP BY 
   g
)
SELECT 
   case c
   when 1 then ip + '.0.0.0'
   when 2 then ip + '.0.0'
   when 3 then ip + '.0'
   else ip
   end,
   case LEAD(c,1,5) OVER(ORDER BY num)
   when 1 then COALESCE(LEAD(ip,1) OVER(ORDER BY num),
                        FIRST_VALUE(ip) OVER(ORDER BY num)) + '.0.0.0'
   when 2 then COALESCE(LEAD(ip,1) OVER(ORDER BY num),
                        FIRST_VALUE(ip) OVER(ORDER BY num)) + '.0.0'
   when 3 then COALESCE(LEAD(ip,1) OVER(ORDER BY num),
                        FIRST_VALUE(ip) OVER(ORDER BY num)) + '.0'
   else COALESCE(LEAD(ip,1) OVER(ORDER BY num),
                 FIRST_VALUE(ip) OVER(ORDER BY num))
   end,
   ABS(sum - 
       COALESCE(LEAD(sum,1) OVER(ORDER BY num),
                FIRST_VALUE(sum) OVER(ORDER BY num))
      ) + 1
FROM 
   dsG1

Задание: 38 (ZrenBy: 2003-09-01) 
Для баллончиков, которые не использовались для окраски белых квадратов и не использовались совместно с баллончиками, которые окрашивали белые квадраты, найти те окрашенные ими квадраты, которые не имеют зелёной компоненты.
Вывести имя баллончика, имя квадрата, цвет квадрата в формате (R,G,B), например (012,000,155)

WITH
dsA AS
(SELECT
   b.b_v_id,
   b.b_q_id,
   SUM(b.b_vol) OVER (PARTITION BY b.b_q_id) s,
   SUM(IIF(v.v_color = 'R',b_vol,0)) OVER(PARTITION BY b.b_q_id) r,
   SUM(IIF(v.v_color = 'G',b_vol,0)) OVER(PARTITION BY b.b_q_id) g,
   SUM(IIF(v.v_color = 'B',b_vol,0)) OVER(PARTITION BY b.b_q_id) b
FROM
   utB b
   INNER JOIN utV v ON v.v_id = b.b_v_id
)
SELECT 
   (SELECT v_name FROM utV where dsA.B_V_ID = V_ID),
   (SELECT q_name FROM utQ where dsA.B_Q_ID = Q_ID),
   MAX(CONCAT(
          '(',
          substring(cast(1000 + R as varchar),2,3),
          ',000,',
          substring(cast(1000 + B as varchar),2,3),
          ')'
         ))
FROM
   dsA
WHERE
   b_v_id not in (SELECT b_v_id FROM dsA WHERE s = 765) AND
   g = 0 and
   b_v_id not in (SELECT b_v_id FROM dsA WHERE b_q_id in 
                  (SELECT b_q_id FROM dsA WHERE b_v_id in 
                   (SELECT b_v_id FROM dsA WHERE s = 765)
                  )
                 )
GROUP BY B_Q_ID, B_V_ID

Задание: 43 (qwrqwr: 2015-04-24) 
По итогам дня машины вывозят из мастерской опустевшие баллоны, в одну машину всегда помещается ровно 5 баллонов. Остаток не вывозят, пока не накопится 5 пустых баллонов.
Определить число машин для каждого дня, когда вывозили баллоны: в первом столбце дата (ГГГГ-ММ-ДД), во втором число машин.
Отдельно двумя строками вывести: остаток невывезенных пустых баллонов (текст 'empty_rest' и число) и количество начатых, но еще не пустых баллонов в мастерской (текст 'nonempty_rest' и число).
WITH
dsD AS
(SELECT
   max(b_datetime) date
FROM
   utB
GROUP BY 
   FORMAT(b_datetime, 'yyyy-MM-dd')
),
dsS AS
(SELECT
   d.date,
   b.b_v_id,
   sum(b.b_vol) sum
FROM
   utB b,
   dsD d
WHERE
   b.b_datetime <= d.date
GROUP BY 
   d.date, b.b_v_id
),
dsS1 AS
(SELECT
   date,
   COUNT(DISTINCT b_v_id) c,
   FLOOR(COUNT(DISTINCT b_v_id) / 5) c5
FROM
   dsS
WHERE 
   sum >=255
GROUP BY 
   date
),
dsCl AS
(
SELECT
   date,
   c,
   c5,
   lag(c5,1,0) OVER(ORDER BY date) cl
FROM
   dsS1
)

SELECT
   FORMAT(date, 'yyyy-MM-dd'),
   c5 - cl
FROM
   dsCl
WHERE 
   cl < c5
UNION ALL
SELECT TOP 1
   'empty_rest', 
    FIRST_VALUE(c) OVER(ORDER BY date DESC) % 5
FROM
   (SELECT C, date FROM dsCl 
    union all 
    select 0,'1900-01-01') c5
UNION ALL
SELECT TOP 1
   'nonempty_rest', 
    FIRST_VALUE(M.C) OVER(ORDER BY M.date DESC)
FROM
   (SELECT COUNT(DISTINCT b_v_id) C ,date FROM dsS where sum < 255
    and date = (select max(date) from dsS) GROUP BY date
    union all 
    select 0,'1900-01-01') M

Задание: 47 (qwrqwr: 2010-11-19) 
Каждый окрашенный квадрат обрабатывался по техническому заданию (ТЗ). В ТЗ для квадрата указывается необходимая этапность (последовательность) окраски и требуемый цвет на каждом этапе окраски. 
Каждый этап определяется моментом времени окраски, а цвет на каждом этапе формируется сочетанием RGB-составляющих с учетом их объемов. 
Вывести названия всех пар квадратов, ТЗ на окраску у которых одинаковы (первым выводить квадрат с меньшим Q_ID).
WITH
dsD AS
(SELECT DISTINCT
   b_datetime date
FROM
   utB
),
dsS AS
(SELECT
   d.date,
   b.b_q_id,
   CONCAT('R=',sum(IIF(v.v_color = 'R', b.b_vol, 0)),
          'G=',sum(IIF(v.v_color = 'G', b.b_vol, 0)),
          'B=',sum(IIF(v.v_color = 'B', b.b_vol, 0))) c
FROM
   utB b,
   dsD d,
   utV v
WHERE
   b.b_datetime <= d.date AND
   v.v_id = b.b_v_id

GROUP BY 
   d.date, b.b_q_id
),
dsS1 AS
(SELECT
   b_q_id,
   c, 
   max(date) date
FROM
   dsS
GROUP BY 
   b_q_id, c
),
dsS2 AS
(SELECT
   b_q_id,
   STRING_AGG(c,',')  WITHIN GROUP (ORDER BY date) c
FROM
   dsS1
GROUP BY 
   b_q_id
)
SELECT
   (SELECT q_name FROM utQ WHERE q_id = s1.b_q_id),
   (SELECT q_name FROM utQ WHERE q_id = s2.b_q_id)
FROM 
   dsS2 s1,
   dsS2 s2
WHERE
   s1.b_q_id < s2.b_q_id and
   s1.c = s2.c

Задание: 51 (Fiolent: 2004-06-23) 
Найти квадраты, которые окрашивались не менее 3 раз подряд баллончиками одного и того 
же цвета. При одновременной окраске считать, что баллончики используются в порядке 
возрастания их номеров. Вывести номер квадрата,
цвет и количество окрасок подряд этим цветом (группа), дата-время первой окраски в этой группе, дата-время последней окраски в этой группе.
WITH 
dsQ AS
(
SELECT
   b.b_q_id,
   ROW_NUMBER() OVER(PARTITION BY b.b_q_id  
               ORDER BY b.b_datetime, v.v_id
              ) -
   ROW_NUMBER() OVER(PARTITION BY b.b_q_id , v.v_color 
               ORDER BY b.b_datetime, v.v_id
              ) numC,   
   b.b_datetime,
   v.v_color
FROM
   utB b
   INNER JOIN utV v ON v.v_id = b.b_v_id
)
SELECT 
   b_q_id,
   v_color,
   COUNT(*),
   MIN(b_datetime),
   MAX(b_datetime)
FROM
   dsQ
GROUP BY 
   b_q_id,
   numC,
   v_color
HAVING 
   COUNT(*) >= 3

Задание: 52 (Serge I: 2015-01-10) 
Для каждого цвета имеющейся в БД краски перечислить через запятую идентификаторы баллончиков данного цвета в порядке возрастания. 
Для более двух идущих подряд ИД использовать дефис. Например, для списка ИД 3,4,7,8,9,12 результат должен быть таким:
3,4,7-9,12.
Вывод: цвет (V_COLOR), список идентификаторов.
SELECT
  DSd1.v_color,
  STUFF(
       (SELECT iif(c = 1 ,concat(',',min),
                   iif(c = 2 ,concat(',',min,',',max),
                                   concat(',',min,'-',max)
                      )
                  )    
        FROM
           (SELECT 
   v_color,
   gr,
   min(v_id) min,
   max(v_id) max,
   count(*) c
FROM
(
SELECT
   v_id - ROW_NUMBER() OVER(PARTITION BY v_color ORDER BY v_id) gr,
   v_color,
   v_id
FROM
   utV
) dsD
GROUP BY 
   v_color,
   gr
) dsD3
        WHERE 
            v_color = dsD1.v_color
        ORDER BY 
            min FOR XML PATH('')
       ),1,1,'')
FROM
(SELECT distinct
   v_color
FROM
   utV) dsD1
GROUP BY 
   dsD1.v_color

