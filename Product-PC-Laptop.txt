/***
Схема БД состоит из четырех таблиц:
Product(maker, model, type)
PC(code, model, speed, ram, hd, cd, price)
Laptop(code, model, speed, ram, hd, price, screen)
Printer(code, model, color, type, price)
Таблица Product представляет производителя (maker), номер модели (model) и тип ('PC' - ПК, 'Laptop' - ПК-блокнот или 'Printer' - принтер).
Предполагается, что номера моделей в таблице Product уникальны для всех производителей и типов продуктов. 
В таблице PC для каждого ПК, однозначно определяемого уникальным кодом – code, 
указаны модель – model (внешний ключ к таблице Product), скорость - speed (процессора в мегагерцах),
объем памяти - ram (в мегабайтах), размер диска - hd (в гигабайтах), скорость считывающего устройства - cd (например, '4x') и цена - price.
Таблица Laptop аналогична таблице РС за исключением того, что вместо скорости CD содержит размер экрана -screen (в дюймах). 
В таблице Printer для каждой модели принтера указывается, является ли он цветным - color ('y', если цветной),
тип принтера - type (лазерный – 'Laser', струйный – 'Jet' или матричный – 'Matrix') и цена - price.
***/

/***
Задание: 14 (Serge I: 2012-04-20)
Найти производителей, которые выпускают более одной модели, при этом все выпускаемые производителем модели являются продуктами одного типа.
Вывести: maker, type

SELECT p.maker, max(p.type )
FROM Product p
GROUP BY p.maker
HAVING COUNT(DISTINCT p.type) = 1 and COUNT(DISTINCT p.model)>1


Задание: 25 (Serge I: 2003-02-14)
Найдите производителей принтеров, которые производят ПК с наименьшим объемом RAM и с самым быстрым процессором среди всех ПК, имеющих наименьший объем RAM. Вывести: Maker
SELECT DISTINCT maker
FROM Product p,
     PC,
     (SELECT max(PC.speed) speed,
             min(minram.val) minram
      FROM PC,
           (SELECT min(ram) val
            FROM PC
           ) minram
      WHERE PC.ram = minram.val
     ) values1
WHERE p.model = PC.model and
      PC.speed = values1.speed and
      PC.ram = values1.minram and
      p.maker in (SELECT maker
                   FROM Product p2
                  WHERE p2.type = 'Printer');

Задание: 65 (Serge I: 2009-08-24)
Пронумеровать уникальные пары {maker, type} из Product, упорядочив их следующим образом:
- имя производителя (maker) по возрастанию;
- тип продукта (type) в порядке PC, Laptop, Printer.
Если некий производитель выпускает несколько типов продукции, то выводить его имя только в первой строке;
остальные строки для ЭТОГО производителя должны содержать пустую строку символов (''). 
WITH dsProd AS
(SELECT DISTINCT p.maker,
       p.type,
       IIF(p.type = 'PC',1, IIF(p.type = 'Laptop',2,3)) sort
FROM Product p
),
dsRes AS
(SELECT row_number() over(ORDER BY maker, sort) num,
       row_number() over(partition BY maker ORDER BY maker, sort) numPar,
       maker,
       type
 FROM dsProd
)
SELECT num, IIF(numPar = 1,maker,''), type
FROM dsRes;

Задание: 82 (Serge I: 2011-10-08)
В наборе записей из таблицы PC, отсортированном по столбцу code (по возрастанию) найти среднее значение цены для каждой шестерки подряд идущих ПК.
Вывод: значение code, которое является первым в наборе из шести строк, среднее значение цены в наборе.
WITH CTE(code,price,number)
AS
(
SELECT PC.code,PC.price, number= ROW_NUMBER() OVER (ORDER BY PC.code)
FROM PC
)
SELECT CTE.code, AVG(C.price)
FROM CTE
JOIN CTE C ON (C.number-CTE.number)<6 AND (C.number-CTE.number)> =0
GROUP BY CTE.number,CTE.code
HAVING COUNT(CTE.number)=6

Задание: 97 (qwrqwr: 2013-02-15)
Отобрать из таблицы Laptop те строки, для которых выполняется следующее условие:
значения из столбцов speed, ram, price, screen возможно расположить таким образом, что каждое последующее значение будет превосходить предыдущее в 2 раза или более.
Замечание: все известные характеристики ноутбуков больше нуля.
Вывод: code, speed, ram, price, screen.

WITH dsA AS
(SELECT l.code id, l.speed a
FROM Laptop l
WHERE l.speed  > 0 and
      l.ram  > 0 and
      l.price > 0 and
      l.screen > 0
UNION
SELECT l.code, l.ram
FROM Laptop l
WHERE l.speed  > 0 and
      l.ram  > 0 and
      l.price > 0 and
      l.screen > 0
UNION
SELECT l.code, l.price
FROM Laptop l
WHERE l.speed  > 0 and
      l.ram  > 0 and
      l.price > 0 and
      l.screen > 0
UNION
SELECT l.code, l.screen
FROM Laptop l
WHERE l.speed  > 0 and
      l.ram  > 0 and
      l.price > 0 and
      l.screen > 0
),
dsAR AS
(SELECT id, a, row_number() over(partition BY id ORDER BY a) r
 FROM dsA
),
dsRes AS
(SELECT dsAR.id
 FROM dsAR, dsAR dsAR1
 WHERE dsAR.id = dsAR1.id and
       dsAR.r + 1 = dsAR1.r and
       dsAR.a * 2  <= dsAR1.a
 GROUP BY dsAR.id
 HAVING COUNT(*) = 3
)
SELECT l.code, l.speed, l.ram, l.price, l.screen
FROM dsRes, Laptop l
WHERE dsRes.id = l.code

Задание: 98 (qwrqwr: 2010-04-26)
Вывести список ПК, для каждого из которых результат побитовой операции ИЛИ, примененной к двоичным представлениям скорости процессора и объема памяти, содержит последовательность из не менее четырех идущих подряд единичных битов.
Вывод: код модели, скорость процессора, объем памяти.

WITH TEMP AS 
(SELECT code, 
       speed,
       ram,
       speed|ram AS ILI,
       speed|ram*1 AS Working_level,
       CAST('' AS VARCHAR(max)) AS Bi_ILI FROM PC
 UNION ALL
 SELECT TEMP.code,
       TEMP.speed,
       TEMP.ram,
       TEMP.ILI,
       TEMP.Working_level / 2,
       CAST(TEMP.Working_level%2 AS VARCHAR(max))+TEMP.Bi_ILI FROM TEMP
 WHERE TEMP.Working_level> 0 
)
SELECT code, speed, ram FROM TEMP
       WHERE Working_level=0
       AND Bi_ILI like '%1111%' 

Задание: 101 (qwrqwr: 2013-03-29)
Таблица Printer сортируется по возрастанию поля code. 
Упорядоченные строки составляют группы: первая группа начинается с первой строки, каждая строка со значением color='n' начинает новую группу, группы строк не перекрываются.
Для каждой группы определить: наибольшее значение поля model (max_model), количество уникальных типов принтеров (distinct_types_cou) и среднюю цену (avg_price). 
Для всех строк таблицы вывести: code, model, color, type, price, max_model, distinct_types_cou, avg_price.
WITH dsP AS
(SELECT code,
        model, 
        color,
        type, 
        price,  
        count(iif(color = 'n',0,null)) over( ORDER BY code) colorGroup
 FROM Printer
)
SELECT dsP.code,
       dsP.model, 
       dsP.color,
       dsP.type, 
       dsP.price,
       dsAVG.max_model,
       dsAVG.distct_types,
       dsAVG.avg_price
FROM dsP,
     (SELECT max(model) max_model,
             count(DISTINCT type) distct_types,
             AVG(price) avg_price,
             colorGroup
        FROM dsP
      GROUP BY colorGroup
     ) dsAVG
WHERE dsP.colorGroup = dsAVG.colorGroup

Задание: 105 (qwrqwr: 2013-09-11)
Статистики Алиса, Белла, Вика и Галина нумеруют строки у таблицы Product.
Все четверо упорядочили строки таблицы по возрастанию названий производителей.
Алиса присваивает новый номер каждой строке, строки одного производителя она упорядочивает по номеру модели.
Трое остальных присваивают один и тот же номер всем строкам одного производителя.
Белла присваивает номера начиная с единицы, каждый следующий производитель увеличивает номер на 1.
У Вики каждый следующий производитель получает такой же номер, какой получила бы первая модель этого производителя у Алисы.
Галина присваивает каждому следующему производителю тот же номер, который получила бы его последняя модель у Алисы.
Вывести: maker, model, номера строк получившиеся у Алисы, Беллы, Вики и Галины соответственно.

WITH dsP AS
(SELECT maker,
        model,
        ROW_NUMBER() OVER (ORDER BY maker, model) A,
        DENSE_RANK() OVER (ORDER BY maker) B,
        RANK() OVER (ORDER BY maker) C
 FROM Product p
) 
SELECT *,
       max(A) OVER (PARTITION BY maker)
FROM dsP

Задание: 137 (Serge I: 2005-01-19)
Для каждой пятой модели (в порядке возрастания номеров
моделей) из таблицы Product
определить тип продукции и среднюю цену модели.
WITH 
dsM AS
    (SELECT
         model,
         price 
     FROM
         PC

     UNION ALL

     SELECT
         model,
         price 
     FROM
         Laptop

     UNION ALL

     SELECT
         model,
         price 
     FROM
         Printer
    ),
dsP AS
    (SELECT 
         model, 
         type,
         (SELECT AVG(dsM.price) FROM dsM WHERE p.model = dsM.model) price,
         ROW_NUMBER() OVER (ORDER BY model) nums
     FROM Product p
    )
SELECT
    type, 
    price
FROM 
    dsP
WHERE
    nums % 5 = 0

Задание: 123 (qwrqwr: 2014-11-07)
Для каждого производителя подсчитать: сколько имеется в наличии его продуктов (любого типа) с неуникальной для этого производителя ценой и количество таких неуникальных цен. 
Вывод: производитель, количество продуктов, количество цен.
WITH 
dsM1 AS
    (SELECT
         model,
         price
     FROM
         PC

     UNION ALL

     SELECT
         model,
         price 
     FROM
         Laptop

     UNION ALL

     SELECT
         model,
         price 
     FROM
         Printer
    ),
dsP AS
    (SELECT 
         p.maker, 
         dsM1.price,
         p.model
     FROM 
         Product p
         left join dsM1
         on dsM1.model = p.model    
    ),
dsPrice AS
(SELECT
   maker,
    (SELECT 
          IIF(COUNT(dsP1.price)-1>0,1,0)
     FROM dsP dsP1 
     WHERE dsP1.price = dsP.price and
           dsP1.maker = dsP.maker
    ) c,
    price
FROM
    dsP
)
SELECT
    maker,
    sum(c),
    COUNT(DISTINCT iif(c>0,price,null))
FROM
    dsPrice
GROUP BY
    maker

Задание: 125 (Baser: 2014-10-24)
Данные о продаваемых моделях и ценах (из таблиц Laptop, PC и Printer) объединить в одну таблицу LPP и создать в ней порядковую нумерацию (id) без пропусков и дубликатов. 
Считать, что модели внутри каждой из трёх таблиц упорядочены по возрастанию поля code. Единую нумерацию записей LPP сделать по следующему правилу: сначала идут первые модели из таблиц (Laptop, PC и Printer), потом последние модели, далее - вторые модели из таблиц, предпоследние и т.д. 
При исчерпании моделей определенного типа, нумеровать только оставшиеся модели других типов. 
Вывести: id, type, model и price. Тип модели type является строкой 'Laptop', 'PC' или 'Printer'.
WITH dsP AS
(SELECT
    code,
    'Laptop' type,
    model,
    price,
    IIF(code<=(SELECT COUNT(*) FROM Laptop)/2,
        ROW_NUMBER() OVER (ORDER BY code)*2-1,
        ROW_NUMBER() OVER (ORDER BY code DESC)*2
       ) num 
FROM 
    Laptop
UNION 
SELECT
    code,
    'PC' type,
    model,
    price,
    IIF(code<=(SELECT COUNT(*) FROM PC)/2,
        ROW_NUMBER() OVER (ORDER BY code)*2-1,
        ROW_NUMBER() OVER (ORDER BY code DESC)*2
       ) num
FROM 
    PC
UNION 
SELECT
    code,
    'Printer' type,
    model,
    price,
    IIF(code<=(SELECT COUNT(*) FROM Printer)/2,
        ROW_NUMBER() OVER (ORDER BY code)*2-1,
        ROW_NUMBER() OVER (ORDER BY code DESC)*2
       ) num
FROM 
    Printer
)
SELECT
    ROW_NUMBER() OVER(ORDER BY num, type),
    type,
    model,
    price
FROM 
    dsP

Задание: 127 (qwrqwr: 2015-04-24)
Найти округленное до сотых долей среднее арифметическое следующих цен:
1. Цена самых дешевых Laptop-ов от производителей РС с самой низкой скоростью CD;
2. Цена самых дорогих РС от производителей самых дешевых принтеров;
3. Цена самых дорогих принтеров от производителей Laptop-ов с наибольшим объемом памяти.
Замечание: При расчёте среднего отсутствующие цены не учитывать.
WITH 
dsPCD AS
    (SELECT
         p.maker
     FROM 
         PC,
         Product p
     WHERE
         p.model = PC.model and
         cast(replace(cd,'x','')as numeric) = (SELECT MIN(cast(replace(cd,'x','') as numeric)) FROM PC)
    ),
dsL AS
    (SELECT
         TOP 1  l.price 
     FROM 
         Laptop l,
         Product p
     WHERE
         p.model = l.model and
         p.maker in (SELECT maker FROM dsPCD) and
         l.price > 0
     ORDER BY l.price
    ),
dsPPr AS
    (SELECT
         p.maker
     FROM 
         Printer pr,
         Product p
     WHERE
         p.model = pr.model and
         pr.price = (SELECT MIN(price) FROM Printer)
    ),
dsPC AS
    (SELECT
         TOP 1  PC.price 
     FROM 
         PC,
         Product p
     WHERE
         p.model = PC.model and
         p.maker in (SELECT maker FROM dsPPr) and
         PC.price > 0
     ORDER BY PC.price DESC
    ),
dsPL AS
    (SELECT
         p.maker
     FROM 
         Laptop l,
         Product p
     WHERE
         p.model = l.model and
         l.ram = (SELECT MAX(RAM) FROM lAPTOP)
    ),
dsPr AS
    (SELECT
         TOP 1 pr.price 
     FROM 
         Printer pr,
         Product p
     WHERE
         p.model = pr.model and
         p.maker in (SELECT maker FROM dsPL) and
         pr.price > 0
     ORDER BY pr.price DESC
    )
SELECT
    cast(AVG(price) as NUMERIC(10,2))
FROM
    (SELECT
         price
     FROM 
         dsL
     UNION ALL
     SELECT
         price
     FROM 
         dsPC
     UNION ALL
     SELECT
         price
     FROM 
         dsPr
     ) dsPrices

Задание: 144 (Serge I: 2019-01-04)
Найти производителей, которые производят PC как с самой низкой ценой, так и с самой высокой.
Вывод: maker
WITH 
dsMakersMaxPrice AS
   (SELECT
        p.maker        
    FROM 
        PC,
        Product p
    WHERE 
        price in (SELECT MAX(price) FROM PC) AND
        p.model = PC.model
   ),
dsMakersMinPrice AS
   (SELECT
        p.maker        
    FROM 
        PC,
        Product p
    WHERE 
        price in (SELECT MIN(price) FROM PC) AND
        p.model = PC.model
   )
SELECT
    DISTINCT p.maker
FROM 
    Product p
WHERE 
    p.maker in (SELECT maker FROM dsMakersMinPrice) and
    p.maker in (SELECT maker FROM dsMakersMaxPrice)

DML
Задание: 10 (Serge I: 2004-09-09)
Добавить в таблицу PC те модели ПК из Product, которые отсутствуют в таблице PC.

При этом модели должны иметь следующие характеристики:

1. Код равен номеру модели плюс максимальный код, который был до вставки.

2. Скорость, объем памяти и диска, а также скорость CD должны иметь максимальные характеристики среди всех имеющихся в таблице PC.

3. Цена должна быть средней среди всех ПК, имевшихся в таблице PC до вставки.
INSERT INTO PC
SELECT
    model + (SELECT MAX(code) FROM PC) code,
    model,
    (SELECT MAX(speed) FROM PC) speed,
    (SELECT MAX(ram) FROM PC) ram,
    (SELECT MAX(hd) FROM PC) hd,
    CAST((SELECT MAX(cast(replace(cd,'x','') as numeric)) 
          FROM PC
         ) 
         AS VARCHAR(2)
        )+ 'x' cd,
    (SELECT AVG(price) FROM PC) price
FROM 
    Product
WHERE 
    model not in (SELECT model FROM PC) AND
    type = 'PC'


Задание: 4 (Serge I: 2009-04-17) 
Посчитать сумму цифр в номере каждой модели из таблицы Product
Вывод: номер модели, сумма цифр
select model,
(datalength(model)-datalength(REPLACE(model, '1', '')))*1 +
(datalength(model)-datalength(REPLACE(model, '2', '')))*2 +
(datalength(model)-datalength(REPLACE(model, '3', '')))*3 +
(datalength(model)-datalength(REPLACE(model, '4', '')))*4 +
(datalength(model)-datalength(REPLACE(model, '5', '')))*5 +
(datalength(model)-datalength(REPLACE(model, '6', '')))*6 +
(datalength(model)-datalength(REPLACE(model, '7', '')))*7 +
(datalength(model)-datalength(REPLACE(model, '8', '')))*8 +
(datalength(model)-datalength(REPLACE(model, '9', '')))*9
from product

***/
